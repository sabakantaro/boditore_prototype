version: 2
jobs:
  build:
    docker:
      #アプリのバージョンを指定
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: Snivy
          RAILS_ENV: test
      #使ってるデータベースとバージョンを指定する。# 「host: localhost」でアクセスできるサービスコンテナイメージ。
      - image: circleci/postgres:13.3
        environment:
          #それぞれ設定
          POSTGRES_USER: Snivy
          POSTGRES_DB: ci_test
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: ~/boditore_prototype
    steps:
      - checkout
      #bundle キャッシュをリストアする。
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      # bundle install で依存関係をインストールする。
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.2.25
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # bundle キャッシュを保存する。
      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      - run:
          name: DBの起動を待つ
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # rspecを実行する
      # Webpack用
      - run:
          name: yarn Install
          command: yarn install
      - run: bundle exec bin/webpack

      - run:
          name: rspecを実行
          command: bundle exec rspec

      #awsデプロイ
      - add_ssh_keys:
          fingerprints:
            # - "b2:8e:3c:03:80:9c:dc:78:a3:d6:dd:12:1b:c0:10:94"
            # - "99:9c:f1:fe:52:a6:5f:ca:f0:5e:7b:f2:60:47:ad:c0"
            - "5f:94:d4:40:1b:d0:fd:19:e8:13:ae:df:10:9f:0d:01"
      - run: ssh ${USER_NAME}@${HOST_NAME} 'cd var/www/boditore_prototype && git pull'
      # masterブランチの時のみデプロイ
      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy
